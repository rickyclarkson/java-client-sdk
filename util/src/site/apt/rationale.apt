Design Rationale

* Making Operating System detection typesafe

  We considered two approaches for this, a Java 5 enum type and a utility class and we decided to go with the enum type since it guarantees type safety and gives us a straight forward mechanism for adding new operating systems as they are supported.
  
  The enum type (called OperatingSystem) enumerates the operating systems that we support. It  includes a default value (OperatingSystem.Unknown) for unrecognized and unsupported operating systems. There is a static method that returns one of the enum values based on the operating system that you are running on. 
  
  The anticipated use of this class would be as follows:
  
+--
switch (OperatingSystem.getOperatingSystem()) {
    case WindowsVista:
    case WindowsXP:
        // These operating systems are supported, do something
        ...
        break;
    default:
        // All other operating systems are not
        break;
}
+-- 
